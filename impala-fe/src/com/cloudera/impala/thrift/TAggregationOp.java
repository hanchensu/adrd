/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.cloudera.impala.thrift;


import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

public enum TAggregationOp implements org.apache.thrift.TEnum {
  INVALID(0),
  COUNT(1),
  MAX(2),
  DISTINCT_PC(3),
  MERGE_PC(4),
  DISTINCT_PCSA(5),
  MERGE_PCSA(6),
  MIN(7),
  SUM(8);

  private final int value;

  private TAggregationOp(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static TAggregationOp findByValue(int value) { 
    switch (value) {
      case 0:
        return INVALID;
      case 1:
        return COUNT;
      case 2:
        return MAX;
      case 3:
        return DISTINCT_PC;
      case 4:
        return MERGE_PC;
      case 5:
        return DISTINCT_PCSA;
      case 6:
        return MERGE_PCSA;
      case 7:
        return MIN;
      case 8:
        return SUM;
      default:
        return null;
    }
  }
}
